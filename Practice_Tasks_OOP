//Classes and Objects
/*              Buttons

You are making a user interface that needs to have buttons in a form.
You decide to make a Button class, with width and height properties .
Complete the given program so that the code in main works as expected.
Both width and height are Integers.              */

// your code goes here
class Button{
    var width = 0
    var height = 0
}
fun main(args: Array<String>) {
    val b1 = Button()
    b1.width = readLine()!!.toInt()
    b1.height = readLine()!!.toInt()
    
    println(b1.width+b1.height)
}

//--------------------------------------------------------------------------------------------------------------------------

//Constructors
/*                                   Buttons Constructor
You need to modify the Button class and add a default constructor to it, which initializes the width and height properties.
Add the constructor so that the given code in main works as expected.
The given code takes the values from user input and passes them to the object's constructor.                          */

class Button {
    var width = 0
    var height = 0
    constructor(w :Int,h: Int){
        width = w
        height = h
    }
}
fun main(args: Array<String>) {
    val b1 = Button(readLine()!!.toInt(), readLine()!!.toInt())

    println(b1.width*b1.height)
}

//--------------------------------------------------------------------------------------------------------------------------
//Getters and Setters

/*              Button Setter

You continue working on the Button class.
You need to have a minimum height for the Buttons - it cannot have a value below 50.
You decide to create a setter for the height property so that if the provided value is less than 50, it is set as 50.
Create a valid setter for the height property so that the code works as expected.                                            */


class Button {
    var width: Int = 0
    var height: Int = 0
    // your code goes here

    get() = field

    set(value){
        if(value<50)
        {
            field = 50
        }
        else{
            field = value
        }
    }
    
}
fun main(args: Array<String>) {
    val b1 = Button()
    b1.height = readLine()!!.toInt()
    b1.width = readLine()!!.toInt()

    println(b1.width+b1.height)
}

//--------------------------------------------------------------------------------------------------------------------------------------

//  Class functions

/*            Button Tap

Let's add some behavior to our Button class!
You need to define a tap() function for the Button class. The function should output the message "button was tapped", where "button" is the name of the object. This means that you also need to add a name property to the Button class.
The code in main takes the name of the Button as input, assigns it to the property, and calls the tap() function.

Sample Input:
Send

Sample Output:
Send was tapped
Note that the constructor should include only the width and height properties.                  */

class Button(var width: Int, var height: Int) {
    //your code goes here
    var name : String ?= null
    fun tap() {
        println(name+ " " + "was tapped")
    }
}
fun main(args: Array<String>) {
    val b1 = Button(200, 50)
    b1.name = readLine()!!

    b1.tap()
}

